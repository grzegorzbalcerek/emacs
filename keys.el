
(global-set-key (kbd "C-s-|") 'toggle-truncate-lines)
(global-set-key (kbd "M-o m") 'enriched-toggle-markup)

(global-set-key (kbd "s-j") 'mc/mark-next-like-this)
(global-set-key (kbd "C-S-s-j") 'mc/mark-all-like-this)
(global-set-key (kbd "S-s-j") 'mc/unmark-previous-like-this)

(global-set-key (kbd "C-s-\\") 'split-window-right)
(global-set-key (kbd "C-s-`") 'split-window-below)
(global-set-key (kbd "<C-s-left>") (lambda (arg)(interactive "P") (if arg (windmove-delete-left)(windmove-left))))
(global-set-key (kbd "<C-s-right>") (lambda (arg)(interactive "P") (if arg (windmove-delete-right)(windmove-right))))
(global-set-key (kbd "<C-s-up>") (lambda (arg)(interactive "P") (if arg (windmove-delete-up)(windmove-up))))
(global-set-key (kbd "<C-s-down>") (lambda (arg)(interactive "P") (if arg (windmove-delete-down)(windmove-down))))
(global-set-key (kbd "<C-s-return>") 'delete-other-windows)

(global-set-key (kbd "<s-left>") 'intelligent-previous-buffer)
(global-set-key (kbd "<s-right>") 'intelligent-next-buffer)
(global-set-key (kbd "<s-up>") (lambda()(interactive)(dired ".")))
(global-set-key (kbd "<s-down>") 'buffer-menu)
(global-set-key (kbd "<s-backspace>") (lambda()(interactive)(kill-buffer nil)))

(global-set-key [f1] 'save-buffer)
(global-set-key [f2] 'delete-trailing-whitespace)
(global-set-key [f5] 'compile)
(global-set-key [f6] 'recompile)
(global-set-key [f7] 'previous-error)
(global-set-key [f8] 'next-error)
(global-set-key [f9] 'delete-whitespace-rectangle)
(global-set-key [f10] 'open-rectangle)

(global-set-key (kbd "C-M-y") 'yank-replace-region)

(global-set-key (kbd "<M-down>") 'move-line-down)
(global-set-key (kbd "<M-up>") 'move-line-up)
(global-set-key (kbd "<C-S-return>") 'duplicate-line)
(global-set-key (kbd "<C-M-S-backspace>") 'copy-line)
(global-set-key (kbd "s-x") 'ucode-to-char)

(global-set-key (kbd "s-<") (lambda(n)(interactive "p")(self-insert-command n ?«)))
(global-set-key (kbd "s->") (lambda(n)(interactive "p")(self-insert-command n ?»)))
(global-set-key (kbd "s-,") (lambda(n)(interactive "p")(self-insert-command n ?«)))
(global-set-key (kbd "s-.") (lambda(n)(interactive "p")(self-insert-command n ?»)))

(global-set-key (kbd "s-'") (lambda(n)(interactive "p")(self-insert-command n ?‚)))
(global-set-key (kbd "s-\"") (lambda(n)(interactive "p")(self-insert-command n ?„)))
(global-set-key (kbd "s-]") (lambda(n)(interactive "p")(self-insert-command n ?’)))
(global-set-key (kbd "s-}") (lambda(n)(interactive "p")(self-insert-command n ?”)))

(global-set-key (kbd "s-|") (lambda(n)(interactive "p")(self-insert-command n ?‛)))
(global-set-key (kbd "s-\\") (lambda(n)(interactive "p")(self-insert-command n ?‟)))
(global-set-key (kbd "s-[") (lambda(n)(interactive "p")(self-insert-command n ?‘)))
(global-set-key (kbd "s-{") (lambda(n)(interactive "p")(self-insert-command n ?“)))

(global-set-key (kbd "C-$") (lambda(n)(interactive "p")(self-insert-command n ?§)))
(global-set-key (kbd "s-:") (lambda(n)(interactive "p")(self-insert-command n ?…)))
(global-set-key (kbd "s-;") (lambda(n)(interactive "p")(self-insert-command n ?·)))
(global-set-key (kbd "s--") (lambda(n)(interactive "p")(self-insert-command n ?−)))
(global-set-key (kbd "s-_") (lambda(n)(interactive "p")(self-insert-command n ?—)))
(global-set-key (kbd "s-=") (lambda(n)(interactive "p")(self-insert-command n ?–)))

(global-set-key (kbd "<M-insert>") 'delete-selection-mode)

                                        ; index
(global-set-key (kbd "C-c i 1") (lambda(n)(interactive "p")(self-insert-command n ?¹)))
(global-set-key (kbd "C-c i 2") (lambda(n)(interactive "p")(self-insert-command n ?²)))
(global-set-key (kbd "C-c i 3") (lambda(n)(interactive "p")(self-insert-command n ?³)))
(global-set-key (kbd "C-c i 4") (lambda(n)(interactive "p")(self-insert-command n ?⁴)))
(global-set-key (kbd "C-c i 5") (lambda(n)(interactive "p")(self-insert-command n ?⁵)))
(global-set-key (kbd "C-c i 6") (lambda(n)(interactive "p")(self-insert-command n ?⁶)))
(global-set-key (kbd "C-c i 7") (lambda(n)(interactive "p")(self-insert-command n ?⁷)))
(global-set-key (kbd "C-c i 8") (lambda(n)(interactive "p")(self-insert-command n ?⁸)))
(global-set-key (kbd "C-c i 9") (lambda(n)(interactive "p")(self-insert-command n ?⁹)))
(global-set-key (kbd "C-c i 0") (lambda(n)(interactive "p")(self-insert-command n ?⁰)))
                                        ; arrow
(global-set-key (kbd "C-c a 1") (lambda(n)(interactive "p")(self-insert-command n ?↖)))
(global-set-key (kbd "C-c a 2") (lambda(n)(interactive "p")(self-insert-command n ?↑)))
(global-set-key (kbd "C-c a 3") (lambda(n)(interactive "p")(self-insert-command n ?↗)))
(global-set-key (kbd "C-c a 4") (lambda(n)(interactive "p")(self-insert-command n ?←)))
(global-set-key (kbd "C-c a 5") (lambda(n)(interactive "p")(self-insert-command n ?↕)))
(global-set-key (kbd "C-c a 6") (lambda(n)(interactive "p")(self-insert-command n ?→)))
(global-set-key (kbd "C-c a 7") (lambda(n)(interactive "p")(self-insert-command n ?↙)))
(global-set-key (kbd "C-c a 8") (lambda(n)(interactive "p")(self-insert-command n ?↓)))
(global-set-key (kbd "C-c a 9") (lambda(n)(interactive "p")(self-insert-command n ?↘)))
(global-set-key (kbd "C-c a 0") (lambda(n)(interactive "p")(self-insert-command n ?↔)))
                                        ; double arrow
(global-set-key (kbd "C-c d 1") (lambda(n)(interactive "p")(self-insert-command n ?⇖)))
(global-set-key (kbd "C-c d 2") (lambda(n)(interactive "p")(self-insert-command n ?⇑)))
(global-set-key (kbd "C-c d 3") (lambda(n)(interactive "p")(self-insert-command n ?⇗)))
(global-set-key (kbd "C-c d 4") (lambda(n)(interactive "p")(self-insert-command n ?⇐)))
(global-set-key (kbd "C-c d 5") (lambda(n)(interactive "p")(self-insert-command n ?⇕)))
(global-set-key (kbd "C-c d 6") (lambda(n)(interactive "p")(self-insert-command n ?⇒)))
(global-set-key (kbd "C-c d 7") (lambda(n)(interactive "p")(self-insert-command n ?⇘)))
(global-set-key (kbd "C-c d 8") (lambda(n)(interactive "p")(self-insert-command n ?⇓)))
(global-set-key (kbd "C-c d 9") (lambda(n)(interactive "p")(self-insert-command n ?⇙)))
(global-set-key (kbd "C-c d 0") (lambda(n)(interactive "p")(self-insert-command n ?⇔)))
                                        ; accent `
(global-set-key (kbd "C-c ` a") (lambda(n)(interactive "p")(self-insert-command n ?à)))
(global-set-key (kbd "C-c ` A") (lambda(n)(interactive "p")(self-insert-command n ?À)))
(global-set-key (kbd "C-c ` e") (lambda(n)(interactive "p")(self-insert-command n ?è)))
(global-set-key (kbd "C-c ` E") (lambda(n)(interactive "p")(self-insert-command n ?È)))
(global-set-key (kbd "C-c ` u") (lambda(n)(interactive "p")(self-insert-command n ?ù)))
(global-set-key (kbd "C-c ` U") (lambda(n)(interactive "p")(self-insert-command n ?Ù)))

(global-set-key (kbd "C-c ^ a") (lambda(n)(interactive "p")(self-insert-command n ?á)))
(global-set-key (kbd "C-c ^ A") (lambda(n)(interactive "p")(self-insert-command n ?Á)))
(global-set-key (kbd "C-c ' e") (lambda(n)(interactive "p")(self-insert-command n ?é)))
(global-set-key (kbd "C-c ' E") (lambda(n)(interactive "p")(self-insert-command n ?É)))
(global-set-key (kbd "C-c ^ i") (lambda(n)(interactive "p")(self-insert-command n ?í)))
(global-set-key (kbd "C-c ^ I") (lambda(n)(interactive "p")(self-insert-command n ?Í)))
(global-set-key (kbd "C-c ^ o") (lambda(n)(interactive "p")(self-insert-command n ?ó)))
(global-set-key (kbd "C-c ^ O") (lambda(n)(interactive "p")(self-insert-command n ?Ó)))
(global-set-key (kbd "C-c ^ u") (lambda(n)(interactive "p")(self-insert-command n ?ú)))
(global-set-key (kbd "C-c ^ U") (lambda(n)(interactive "p")(self-insert-command n ?Ú)))

(global-set-key (kbd "C-c ^ a") (lambda(n)(interactive "p")(self-insert-command n ?â)))
(global-set-key (kbd "C-c ^ A") (lambda(n)(interactive "p")(self-insert-command n ?Â)))
(global-set-key (kbd "C-c ^ e") (lambda(n)(interactive "p")(self-insert-command n ?ê)))
(global-set-key (kbd "C-c ^ E") (lambda(n)(interactive "p")(self-insert-command n ?Ê)))
(global-set-key (kbd "C-c ^ i") (lambda(n)(interactive "p")(self-insert-command n ?î)))
(global-set-key (kbd "C-c ^ I") (lambda(n)(interactive "p")(self-insert-command n ?Î)))
(global-set-key (kbd "C-c ^ o") (lambda(n)(interactive "p")(self-insert-command n ?ô)))
(global-set-key (kbd "C-c ^ O") (lambda(n)(interactive "p")(self-insert-command n ?Ô)))
(global-set-key (kbd "C-c ^ u") (lambda(n)(interactive "p")(self-insert-command n ?û)))
(global-set-key (kbd "C-c ^ U") (lambda(n)(interactive "p")(self-insert-command n ?Û)))

(global-set-key (kbd "C-c \" a") (lambda(n)(interactive "p")(self-insert-command n ?ä)))
(global-set-key (kbd "C-c \" A") (lambda(n)(interactive "p")(self-insert-command n ?Ä)))
(global-set-key (kbd "C-c \" e") (lambda(n)(interactive "p")(self-insert-command n ?ë)))
(global-set-key (kbd "C-c \" E") (lambda(n)(interactive "p")(self-insert-command n ?Ë)))
(global-set-key (kbd "C-c \" i") (lambda(n)(interactive "p")(self-insert-command n ?ï)))
(global-set-key (kbd "C-c \" I") (lambda(n)(interactive "p")(self-insert-command n ?Ï)))
(global-set-key (kbd "C-c \" o") (lambda(n)(interactive "p")(self-insert-command n ?ö)))
(global-set-key (kbd "C-c \" O") (lambda(n)(interactive "p")(self-insert-command n ?Ö)))
(global-set-key (kbd "C-c \" u") (lambda(n)(interactive "p")(self-insert-command n ?ü)))
(global-set-key (kbd "C-c \" U") (lambda(n)(interactive "p")(self-insert-command n ?Ü)))

(global-set-key (kbd "C-c , c") (lambda(n)(interactive "p")(self-insert-command n ?ç)))
(global-set-key (kbd "C-c , C") (lambda(n)(interactive "p")(self-insert-command n ?Ç)))

